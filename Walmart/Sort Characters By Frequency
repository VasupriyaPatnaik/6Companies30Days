#include <iostream>
#include <unordered_map>
#include <vector>
#include <algorithm>
using namespace std;

class Solution {
public:
    string frequencySort(string s) {
        unordered_map<char, int> freq;
        
        // Count frequency of each character
        for (char c : s) {
            freq[c]++;
        }
        
        // Create a vector of pairs (character, frequency)
        vector<pair<char, int>> freqVec(freq.begin(), freq.end());
        
        // Sort the vector by frequency in decreasing order
        sort(freqVec.begin(), freqVec.end(), [](const auto &a, const auto &b) {
            return a.second > b.second; // Sort by frequency (higher first)
        });
        
        // Build the resulting string
        string result;
        for (const auto &p : freqVec) {
            result.append(p.second, p.first);
        }
        
        return result;
    }
};
