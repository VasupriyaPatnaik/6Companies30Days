class Solution {
public:
    vector<int> smallestTrimmedNumbers(vector<string>& nums, vector<vector<int>>& queries) {
        vector<int> result;
        
        for (auto& query : queries) {
            int k = query[0], trim = query[1];
            
            // Vector to store (trimmed number, original index)
            vector<pair<string, int>> trimmed;
            
            for (int i = 0; i < nums.size(); i++) {
                string trimmedNum = nums[i].substr(nums[i].size() - trim); // Extract last 'trim' digits
                trimmed.push_back({trimmedNum, i});
            }
            
            // Sort based on trimmed number, if equal then by index
            sort(trimmed.begin(), trimmed.end());
            
            // Get k-th smallest number's original index
            result.push_back(trimmed[k - 1].second);
        }
        
        return result;
    }
};
