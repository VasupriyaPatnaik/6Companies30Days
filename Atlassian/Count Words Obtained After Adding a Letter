#include <vector>
#include <unordered_set>
#include <string>

using namespace std;

class Solution {
public:
    int wordCount(vector<string>& startWords, vector<string>& targetWords) {
        unordered_set<int> startSet;

        // Convert each word in startWords into a bitmask and store it in a set
        for (const string& word : startWords) {
            int bitmask = 0;
            for (char ch : word) {
                bitmask |= (1 << (ch - 'a'));
            }
            startSet.insert(bitmask);
        }

        int count = 0;
        
        // Check for each word in targetWords
        for (const string& word : targetWords) {
            int targetMask = 0;
            for (char ch : word) {
                targetMask |= (1 << (ch - 'a'));
            }

            // Try removing one character at a time
            for (char ch : word) {
                int modifiedMask = targetMask ^ (1 << (ch - 'a')); // Remove one letter
                if (startSet.count(modifiedMask)) {
                    count++;
                    break; // No need to check further
                }
            }
        }
        
        return count;
    }
};
