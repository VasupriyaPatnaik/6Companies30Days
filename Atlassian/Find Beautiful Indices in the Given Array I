#include <vector>
#include <string>
#include <iostream>
using namespace std;

class Solution {
public:
    vector<int> beautifulIndices(string s, string a, string b, int k) {
        vector<int> a_indices, b_indices, result;
        int n = s.size();
        int a_len = a.length(), b_len = b.length();

        // Find all occurrences of 'a'
        for (int i = 0; i <= n - a_len; i++) {
            if (s.substr(i, a_len) == a) {
                a_indices.push_back(i);
            }
        }

        // Find all occurrences of 'b'
        for (int i = 0; i <= n - b_len; i++) {
            if (s.substr(i, b_len) == b) {
                b_indices.push_back(i);
            }
        }

        // Use two-pointer approach to find beautiful indices
        int j = 0;
        for (int i : a_indices) {
            while (j < b_indices.size() && b_indices[j] < i - k) {
                j++;  // Move j forward until b_indices[j] is within range
            }
            if (j < b_indices.size() && abs(b_indices[j] - i) <= k) {
                result.push_back(i);
            }
        }

        return result;
    }
};
