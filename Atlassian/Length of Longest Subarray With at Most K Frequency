#include <unordered_map>
#include <vector>
using namespace std;

class Solution {
public:
    int maxSubarrayLength(vector<int>& nums, int k) {
        unordered_map<int, int> freq;
        int left = 0, maxLength = 0;

        for (int right = 0; right < nums.size(); right++) {
            freq[nums[right]]++;

            // If any element's frequency exceeds k, shrink the window from the left
            while (freq[nums[right]] > k) {
                freq[nums[left]]--;
                left++;
            }

            // Update the max length of the valid subarray
            maxLength = max(maxLength, right - left + 1);
        }

        return maxLength;
    }
};
