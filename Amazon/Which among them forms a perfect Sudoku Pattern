#include <vector>

using namespace std;

class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        int rows[9] = {0}, cols[9] = {0}, boxes[9] = {0}; // Using bitmasks for tracking

        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {
                if (board[i][j] == '.') continue;

                int num = board[i][j] - '0';  // Convert character to integer
                int mask = 1 << num;          // Create a bit mask for this number
                int boxIndex = (i / 3) * 3 + (j / 3);  // Calculate box index

                // Check if this number is already present in the respective row, col, or box
                if ((rows[i] & mask) || (cols[j] & mask) || (boxes[boxIndex] & mask)) {
                    return false;
                }

                // Set the corresponding bits in row, column, and box
                rows[i] |= mask;
                cols[j] |= mask;
                boxes[boxIndex] |= mask;
            }
        }
        return true;
    }
};
